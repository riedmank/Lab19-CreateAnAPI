// <auto-generated />
using CreateAnAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CreateAnAPI.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20181108171854_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CreateAnAPI.Data.Todo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDone");

                    b.Property<string>("Title");

                    b.Property<int>("TodoListID");

                    b.HasKey("ID");

                    b.HasIndex("TodoListID");

                    b.ToTable("Todos");

                    b.HasData(
                        new { ID = 1, IsDone = false, Title = "write code", TodoListID = 1 },
                        new { ID = 2, IsDone = true, Title = "squish the cat", TodoListID = 1 },
                        new { ID = 3, IsDone = false, Title = "wash dishes", TodoListID = 1 }
                    );
                });

            modelBuilder.Entity("CreateAnAPI.Models.TodoList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ListTitle");

                    b.HasKey("ID");

                    b.ToTable("TodoLists");

                    b.HasData(
                        new { ID = 1, ListTitle = "tasks" }
                    );
                });

            modelBuilder.Entity("CreateAnAPI.Data.Todo", b =>
                {
                    b.HasOne("CreateAnAPI.Models.TodoList")
                        .WithMany("Todoes")
                        .HasForeignKey("TodoListID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
